{"version":3,"file":"static/js/337.e80bd934.chunk.js","mappings":"uMA8BA,EA5BmB,SAAH,GAA4C,IAAtCA,EAAU,EAAVA,WAAYC,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SACpCC,GAAUC,EAAAA,EAAAA,MAEVC,EAAe,WAAH,OAASF,EAAQG,KAAK,mBAAD,OAAoBJ,GAAY,EAEvE,OACE,iBACEK,UAAU,iFAC+B,WAEzC,gBACEC,IAAKP,EACLQ,IAAI,GACJF,UAAU,sBACVG,MAAO,CAAEC,OAAQ,UAAWC,SAAU,SACtCC,QAASR,KAEX,cACEE,UAAS,yCACTG,MAAO,CAAEC,OAAQ,UAAWG,MAAO,eACnCD,QAASR,EAAa,SAErBL,MAIT,E,8BCmBA,EAzCmB,WACjB,IAAMe,GAAMC,EAAAA,EAAAA,UACZ,GAAoCC,EAAAA,EAAAA,MAA5BC,EAAI,EAAJA,KAAMC,EAAU,EAAVA,WAAYC,EAAK,EAALA,OAE1BC,EAAAA,EAAAA,YAAU,wBAAiB,QAAjB,EAAMN,EAAIO,eAAO,aAAX,EAAaC,eAAe,CAAEC,SAAU,UAAW,GAAE,IAyBrE,OACE,qBAASjB,UAAU,wCAAwCQ,IAAKA,EAAI,WAClE,eAAIR,UAAU,4CAA2C,SAAC,iBAC1D,iBAAKA,UAAU,wBAAuB,UACnCY,IAAc,SAACM,EAAA,EAAM,CAACC,MAAM,2BAC5BN,IAAS,SAACO,EAAA,EAAK,IACX,OAAJT,QAAI,IAAJA,OAAI,EAAJA,EAAMU,KAAI,SAACC,EAAMC,GAAK,OA7BV,SAACD,EAAMC,GACxB,IAAKD,EAAKE,OAAQ,MAAO,GAOzB,IALgB,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAMc,WAAU,SAACC,GAC3B,QAAKA,EAAYC,SACVD,EAAYC,QAAQ,GAAGC,SAAWN,EAAKK,QAAQ,GAAGC,MAC3D,KAEUL,EAAO,MAAO,GAExB,IAAIM,EAAIP,EAAKQ,SAASC,OAAO,QAG7B,OAFW,IAAPF,IAAUA,EAAIP,EAAKQ,SAASE,SAG9B,SAAC,EAAU,CAETrC,SAAU2B,EAAKK,QAAQ,GAAGC,OAC1BnC,WAAY6B,EAAKQ,SAASG,UAAU,EAAGJ,GACvCnC,SAAU4B,EAAKE,OAAOU,YAHjBZ,EAAKK,QAAQ,GAAGC,OAM3B,CAQkCO,CAAWb,EAAMC,EAAM,SAI3D,C","sources":["components/ArtistCard.jsx","pages/TopArtists.jsx"],"sourcesContent":["import { useHistory } from \"react-router-dom\";\r\n\r\nconst ArtistCard = ({ artistName, imageUrl, artistId }) => {\r\n  const history = useHistory();\r\n\r\n  const clickHandler = () => history.push(`/artist-details/${artistId}`);\r\n\r\n  return (\r\n    <div\r\n      className=\"col-6 col-sm-4 col-md-3 col-lg-6 \r\n    col-xl-3 text-center text-white animate-up\"\r\n    >\r\n      <img\r\n        src={imageUrl}\r\n        alt=\"\"\r\n        className=\"rounded-circle w-75\"\r\n        style={{ cursor: \"pointer\", maxWidth: '150px' }}\r\n        onClick={clickHandler}\r\n      />\r\n      <p\r\n        className={`mb-0 mt-1 fw-semibold truncate mx-auto`}\r\n        style={{ cursor: \"pointer\", width: \"min-content\" }}\r\n        onClick={clickHandler}\r\n      >\r\n        {artistName}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArtistCard;\r\n","import { useEffect, useRef } from \"react\";\r\nimport ArtistCard from \"../components/ArtistCard\";\r\nimport { useGetWorldChartsQuery } from \"../services/shazamCore\";\r\nimport Loader from '../components/Loader';\r\nimport Error from '../components/Error';\r\n\r\nconst TopArtists = () => {\r\n  const ref = useRef();\r\n  const { data, isFetching, error } = useGetWorldChartsQuery();\r\n\r\n  useEffect(() => ref.current?.scrollIntoView({ behavior: \"smooth\" }), []);\r\n\r\n  const mapArtists = (song, index) => {\r\n    if (!song.images) return \"\";\r\n\r\n    const res = data?.findIndex((currentSong) => {\r\n      if (!currentSong.artists) return false;\r\n      return currentSong.artists[0].adamid === song.artists[0].adamid;\r\n    });\r\n\r\n    if (res < index) return \"\";\r\n\r\n    let i = song.subtitle.search(/[&,]/);\r\n    if (i === -1) i = song.subtitle.length;\r\n\r\n    return (\r\n      <ArtistCard\r\n        key={song.artists[0].adamid}\r\n        artistId={song.artists[0].adamid}\r\n        artistName={song.subtitle.substring(0, i)}\r\n        imageUrl={song.images.background}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className=\"col-12 col-lg-6 col-xl-7 mt-5 mt-lg-4\" ref={ref}>\r\n      <h4 className=\"text-white text-center text-sm-start my-3\">Top Artists</h4>\r\n      <div className=\"row g-2 g-sm-3 g-md-4\">\r\n        {isFetching && <Loader title='Loading Top Artists...'/>}\r\n        {error && <Error />}\r\n        {data?.map((song, index) => mapArtists(song, index))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TopArtists;\r\n"],"names":["artistName","imageUrl","artistId","history","useHistory","clickHandler","push","className","src","alt","style","cursor","maxWidth","onClick","width","ref","useRef","useGetWorldChartsQuery","data","isFetching","error","useEffect","current","scrollIntoView","behavior","Loader","title","Error","map","song","index","images","findIndex","currentSong","artists","adamid","i","subtitle","search","length","substring","background","mapArtists"],"sourceRoot":""}