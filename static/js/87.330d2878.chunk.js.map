{"version":3,"file":"static/js/87.330d2878.chunk.js","mappings":"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","sources":["components/MusicPlayer/VolumeBar.jsx","components/MusicPlayer/Audio.jsx","components/MusicPlayer/Controls.jsx","webpack://music_player_app/./src/components/MusicPlayer/Player.module.css?5265","components/MusicPlayer/SeekBar.jsx","webpack://music_player_app/./src/components/MusicPlayer/Track.module.css?c46c","components/MusicPlayer/Track.jsx","components/MusicPlayer/Player.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nlet prevVolume, audioElement, volumeElement;\r\nconst VolumeBar = () => {\r\n  const [isMute, setIsMute] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    audioElement = document.getElementById(\"audio\");\r\n    volumeElement = document.getElementById(\"volume\");\r\n    audioElement.volume = volumeElement.value = 0.009;\r\n  }, []);\r\n\r\n  const toggleMute = (isMute) => {\r\n    if (isMute) {\r\n      prevVolume = volumeElement.value;\r\n      audioElement.volume = volumeElement.value = 0;\r\n    } else {\r\n      audioElement.volume = volumeElement.value = prevVolume;\r\n    }\r\n  };\r\n\r\n  const changeHandler = () => {\r\n    audioElement.volume = volumeElement.value;\r\n    if(volumeElement.value === '0') setIsMute(true);\r\n    else setIsMute(false);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"col-3 col-md-4 ps-2 align-items-center justify-content-end d-flex\">\r\n      {/* <div className=\"align-items-center justify-content-center d-flex w-100\"> */}\r\n        <i\r\n          className={`bi bi-volume-${\r\n            isMute ? \"mute\" : \"up\"\r\n          }-fill fs-3`}\r\n          onClick={() => {\r\n            toggleMute(!isMute); //we can put it after setIsMute also\r\n            setIsMute(!isMute);\r\n          }}\r\n          ></i>\r\n        <input\r\n          id=\"volume\"\r\n          type=\"range\"\r\n          min=\"0.0\"\r\n          max=\"1.0\"\r\n          step=\"0.01\"\r\n          onChange={changeHandler}\r\n          style={{width: 'min(100%, 130px)'}}\r\n        />\r\n      {/* </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(VolumeBar);\r\n","import { useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { playerSliceActions } from \"../../store/store\";\r\n\r\nconst Audio = (props) => {\r\n  const ref = useRef();\r\n  const activeSong = useSelector((state) => state.player.activeSong);\r\n  const isPlaying = useSelector((state) => state.player.isPlaying);\r\n  const dispatch = useDispatch();\r\n\r\n  if (isPlaying) ref.current?.play().catch(() => {});\r\n  else ref.current?.pause();\r\n\r\n  return (\r\n    <audio\r\n      id=\"audio\"\r\n      src={activeSong.hub?.actions?.at(1).uri}\r\n      ref={ref}\r\n      onLoadedData={() => props.onLoadedData(ref.current?.duration)} //this will help to show the duration of the current song\r\n      onTimeUpdate={() => props.onTimeUpdate(ref.current?.currentTime)} //this will help to show the elapsed time of the current song\r\n      onEnded={() => dispatch(playerSliceActions.nextSong())}\r\n      />\r\n  );\r\n};\r\n\r\nexport default Audio;\r\n","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { playerSliceActions } from \"../../store/store.js\";\r\n\r\nconst Controls = () => {\r\n  const isPlaying = useSelector((state) => state.player.isPlaying);\r\n  const isShuffling = useSelector((state) => state.player.isShuffling);\r\n  const dispatch = useDispatch();\r\n  const [isLooping, setIsLooping] = useState(false);\r\n\r\n  const handlePlayPause = () => {\r\n    dispatch(playerSliceActions.playPause());\r\n  };\r\n\r\n  const handlePrevSong = () => {\r\n    dispatch(playerSliceActions.prevSong());\r\n  };\r\n\r\n  const handleNextSong = () => {\r\n    dispatch(playerSliceActions.nextSong());\r\n  };\r\n\r\n  const handleShuffle = () => dispatch(playerSliceActions.toggleShuffling());\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-evenly align-items-center\">\r\n      <i\r\n        className={`bi bi-repeat${isLooping ? \"-1\" : \"\"} fs-4`}\r\n        onClick={() => {\r\n          document.getElementById(\"audio\").loop = !isLooping;\r\n          setIsLooping(!isLooping);\r\n        }}\r\n      ></i>\r\n\r\n      <i className=\"bi bi-skip-start-fill fs-3\" onClick={handlePrevSong}></i>\r\n\r\n      <i\r\n        className={`bi bi-${\r\n          isPlaying ? \"pause\" : \"play\"\r\n        }-fill fs-1 align-self-center`}\r\n        onClick={handlePlayPause}\r\n      ></i>\r\n\r\n      <i className=\"bi bi-skip-end-fill fs-3\" onClick={handleNextSong}></i>\r\n\r\n      <i\r\n        className={`bi bi-shuffle fs-4 ${isShuffling ? \"text-primary\" : \"\"}`}\r\n        onClick={handleShuffle}\r\n      ></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"player\":\"Player_player__28Nm3\"};","import React, { useRef } from \"react\";\r\n\r\nconst SeekBar = (props) => {\r\n  const ref = useRef();\r\n\r\n  const getMinutesSeconds = (seconds) => {\r\n    if (!seconds) seconds = 0;\r\n    const value = Math.ceil(seconds);\r\n    return (\r\n      Math.floor(value / 60) + \":\" + (value % 60).toString().padStart(2, \"0\")\r\n    );\r\n  };\r\n  const currentTime = getMinutesSeconds(props.currentTime);\r\n\r\n  return (\r\n    <div className=\"d-sm-flex justify-content-between text-white\">\r\n      <input\r\n        ref={ref}\r\n        type=\"range\"\r\n        className=\"d-block mx-auto\"\r\n        style={{width: 'min(364px, 100%)'}}\r\n        value={Math.ceil(props.currentTime)}\r\n        min=\"0\"\r\n        max={Math.ceil(props.duration)}\r\n        onChange={() => document.getElementById('audio').currentTime = ref.current.value}\r\n        />\r\n        <span style={{order: '-1'}}>{currentTime}</span>\r\n      <span className=\"float-end\">{getMinutesSeconds(props.duration)}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SeekBar;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"track\":\"Track_track__iVNZ2\",\"track-playing\":\"Track_track-playing__KqUIC\",\"spin\":\"Track_spin__fuyr-\"};","import { useSelector } from \"react-redux\";\r\nimport SongInfo from \"../SongInfo.jsx\";\r\nimport classes from \"./Track.module.css\";\r\n\r\nconst Track = () => {\r\n  const activeSong = useSelector((state) => state.player.activeSong);\r\n  const isPlaying = useSelector((state) => state.player.isPlaying);\r\n\r\n  return (\r\n    <div\r\n      className={`col-3 col-md-4 py-2 pe-0 pe-sm-4 justify-content-center justify-content-md-start ${classes.track} ${\r\n        isPlaying ? classes[\"track-playing\"] : \"\"\r\n      }`}\r\n    >\r\n      <img\r\n        src={activeSong.images?.coverart}\r\n        alt=\"\"\r\n        className=\"rounded-circle img-fluid\"\r\n        style={{ width: `${activeSong ? \"80px\" : \"0px\"}` }}\r\n      />\r\n      <div className=\"text-white ms-3 d-none d-md-block\">\r\n        <SongInfo songData={activeSong} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Track;\r\n","import { useState } from \"react\";\r\nimport Audio from \"./Audio\";\r\nimport Controls from \"./Controls\";\r\nimport classes from \"./Player.module.css\";\r\nimport SeekBar from \"./SeekBar\";\r\nimport Track from \"./Track\";\r\nimport VolumeBar from \"./VolumeBar\";\r\n\r\nconst Player = () => {\r\n  const [duration, setDuration] = useState(null);\r\n  const [currentTime, setCurrentTime] = useState(null);\r\n\r\n  return (\r\n    <div\r\n      id=\"player\"\r\n      className={`row gx-0 px-2 px-md-4 px-lg-5 fixed-bottom ${classes.player} animate-up`}\r\n    >\r\n      <Track />\r\n      <div className=\"col-6 justify-content-center col-md-4 d-flex flex-column\">\r\n        <Controls />\r\n        <SeekBar duration={duration} currentTime={currentTime} />\r\n      </div>\r\n      <Audio\r\n        onLoadedData={(val) => setDuration(val)}\r\n        onTimeUpdate={(val) => setCurrentTime(val)}\r\n      />\r\n      <VolumeBar />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n"],"names":["prevVolume","audioElement","volumeElement","props","ref","useRef","activeSong","useSelector","state","player","isPlaying","dispatch","useDispatch","current","play","catch","pause","id","src","hub","actions","at","uri","onLoadedData","duration","onTimeUpdate","currentTime","onEnded","playerSliceActions","isShuffling","useState","isLooping","setIsLooping","className","onClick","document","getElementById","loop","getMinutesSeconds","seconds","value","Math","ceil","floor","toString","padStart","type","style","width","min","max","onChange","order","classes","images","coverart","alt","SongInfo","songData","VolumeBar","isMute","setIsMute","useEffect","volume","toggleMute","step","React","setDuration","setCurrentTime","val"],"sourceRoot":""}