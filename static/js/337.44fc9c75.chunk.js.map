{"version":3,"file":"static/js/337.44fc9c75.chunk.js","mappings":"2NAqCA,EAnCmB,SAAH,GAA4C,IAAtCA,EAAU,EAAVA,WAAYC,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SACpCC,GAAUC,EAAAA,EAAAA,MAEVC,EAAe,WAAH,OAASF,EAAQG,KAAK,mBAAD,OAAoBJ,GAAY,EAEvE,OACE,iBACEK,UAAU,iFAC+B,WAEzC,gBACEC,QAAQ,OACRC,IAAKR,EACLS,IAAI,GACJH,UAAU,sBACVI,MAAO,CACLC,OAAQ,UACRC,SAAU,QACVC,UAAW,QACXC,UAAW,SAEbC,QAASX,EACTY,OAAQ,SAACC,GAAOA,EAAEC,OAAOR,MAAMS,WAAa,SAAU,KAExD,cACEb,UAAS,yCACTI,MAAO,CAAEC,OAAQ,UAAWS,MAAO,eACnCL,QAASX,EAAa,SAErBL,MAIT,E,oBCaA,EAxCmB,WACjB,IAAMsB,GAAMC,EAAAA,EAAAA,UACNC,GAAYC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAOH,SAAS,IAC7D,GAAoCI,EAAAA,EAAAA,IAAsBJ,EAAW,CAACK,MAAOL,IAArEM,EAAI,EAAJA,KAAMC,EAAU,EAAVA,WAAYC,EAAK,EAALA,OAE1BC,EAAAA,EAAAA,YAAU,wBAAiB,QAAjB,EAAMX,EAAIY,eAAO,aAAX,EAAaC,eAAe,CAAEC,SAAU,UAAW,GAAE,IAuBrE,OACE,qBAAS7B,UAAU,wCAAwCe,IAAKA,EAAI,WAClE,eAAIf,UAAU,4CAA2C,SAAC,iBAC1D,iBAAKA,UAAU,wBAAuB,UACnCwB,IAAc,SAACM,EAAA,EAAM,CAACC,MAAM,2BAC5BN,IAAS,SAACO,EAAA,EAAK,IACM,QAAjB,OAAJT,QAAI,IAAJA,OAAI,EAAJA,EAAMU,QAAQ,MAAmB,OAAJV,QAAI,IAAJA,OAAI,EAAJA,EAAMU,QAAQC,KAAI,SAACC,EAAQC,GAAK,OA3BjD,SAACD,EAAQC,GAM1B,IAJgB,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAMU,QAAQI,WAAU,SAACC,GACnC,OAAOA,EAAcC,KAAOJ,EAAOI,EACrC,KAEUH,EAAO,MAAO,GAExB,IAAII,EAAIL,EAAOM,KAAKC,OAAO,QAG3B,OAFW,IAAPF,IAAUA,EAAIL,EAAOM,KAAKE,SAG5B,SAAC,EAAU,CAEThD,SAAUwC,EAAOI,GACjB9C,WAAY0C,EAAOM,KAAKG,UAAU,EAAGJ,GACrC9C,SAAUyC,EAAOU,OAAO,GAAGC,KAHtBX,EAAOI,GAMlB,CAQyEQ,CAAWZ,EAAQC,EAAM,UAIpG,C","sources":["components/ArtistCard.jsx","pages/TopArtists.jsx"],"sourcesContent":["import { useHistory } from \"react-router-dom\";\r\n\r\nconst ArtistCard = ({ artistName, imageUrl, artistId }) => {\r\n  const history = useHistory();\r\n\r\n  const clickHandler = () => history.push(`/artist-details/${artistId}`);\r\n\r\n  return (\r\n    <div\r\n      className=\"col-6 col-sm-4 col-md-3 col-lg-6 \r\n    col-xl-3 text-center text-white animate-up\"\r\n    >\r\n      <img\r\n        loading='lazy'\r\n        src={imageUrl}\r\n        alt=\"\"\r\n        className=\"rounded-circle w-75\"\r\n        style={{\r\n          cursor: \"pointer\",\r\n          maxWidth: \"150px\",\r\n          maxHeight: \"150px\",\r\n          objectFit: \"cover\",\r\n        }}\r\n        onClick={clickHandler}\r\n        onLoad={(e) => {e.target.style.visibility = 'visible';}}\r\n      />\r\n      <p\r\n        className={`mb-0 mt-1 fw-semibold truncate mx-auto`}\r\n        style={{ cursor: \"pointer\", width: \"min-content\" }}\r\n        onClick={clickHandler}\r\n      >\r\n        {artistName}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArtistCard;\r\n","import { useEffect, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useGetTopArtistsQuery } from \"../services/spotify\";\r\n\r\nimport ArtistCard from \"../components/ArtistCard\";\r\nimport Loader from '../components/Loader';\r\nimport Error from '../components/Error';\r\n\r\nconst TopArtists = () => {\r\n  const ref = useRef();\r\n  const artistIds = useSelector(state => state.player.artistIds);\r\n  const { data, isFetching, error } = useGetTopArtistsQuery(artistIds, {skip: !artistIds});\r\n\r\n  useEffect(() => ref.current?.scrollIntoView({ behavior: \"smooth\" }), []);\r\n\r\n  const mapArtists = (artist, index) => {\r\n\r\n    const res = data?.artists.findIndex((currentArtist) => {\r\n      return currentArtist.id === artist.id;\r\n    });\r\n\r\n    if (res < index) return \"\";\r\n\r\n    let i = artist.name.search(/[&,]/);\r\n    if (i === -1) i = artist.name.length;\r\n\r\n    return (\r\n      <ArtistCard\r\n        key={artist.id}\r\n        artistId={artist.id}\r\n        artistName={artist.name.substring(0, i)}\r\n        imageUrl={artist.images[2].url}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className=\"col-12 col-lg-6 col-xl-7 mt-5 mt-lg-4\" ref={ref}>\r\n      <h4 className=\"text-white text-center text-sm-start my-3\">Top Artists</h4>\r\n      <div className=\"row g-2 g-sm-3 g-md-4\">\r\n        {isFetching && <Loader title='Loading Top Artists...'/>}\r\n        {error && <Error />}\r\n        {data?.artists[0] !== null && data?.artists.map((artist, index) => mapArtists(artist, index))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TopArtists;\r\n"],"names":["artistName","imageUrl","artistId","history","useHistory","clickHandler","push","className","loading","src","alt","style","cursor","maxWidth","maxHeight","objectFit","onClick","onLoad","e","target","visibility","width","ref","useRef","artistIds","useSelector","state","player","useGetTopArtistsQuery","skip","data","isFetching","error","useEffect","current","scrollIntoView","behavior","Loader","title","Error","artists","map","artist","index","findIndex","currentArtist","id","i","name","search","length","substring","images","url","mapArtists"],"sourceRoot":""}