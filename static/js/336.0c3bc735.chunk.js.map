{"version":3,"file":"static/js/336.0c3bc735.chunk.js","mappings":"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","sources":["webpack://music_player_app/./src/components/DetailsHeader.module.css?a687","components/DetailsHeader.jsx","components/AlbumCard.jsx","pages/ArtistDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"track-details\":\"DetailsHeader_track-details__mKPdB\"};","import { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport classes from \"./DetailsHeader.module.css\";\r\n\r\nconst DetailsHeader = ({ artistDetails, songDetails, bio }) => {\r\n  useEffect(() => {\r\n    if (artistDetails)\r\n      document.getElementById(\"artistBio\").innerHTML =\r\n        bio || '';\r\n  }, [artistDetails, bio]);\r\n\r\n  return (\r\n    <div\r\n      className={`row text-white justify-content-center position-relative ${classes[\"track-details\"]}`}\r\n    >\r\n      <div className=\"col-12 col-xl-3\" style={{ maxWidth: \"250px\" }}>\r\n        <img\r\n          src={\r\n            songDetails\r\n              ? songDetails.album.images[0].url\r\n              : artistDetails.images[0].url\r\n          }\r\n          alt=\"\"\r\n          className=\"rounded-circle img-thumbnail\"\r\n          onLoad={(e) => {e.target.style.visibility = 'visible';}}\r\n        />\r\n      </div>\r\n      <div className=\"col-12 col-xl-9 d-flex flex-column justify-content-center text-center text-xl-start\">\r\n        <p className=\"truncate fw-semibold mb-0 fs-4\">\r\n          {songDetails ? songDetails.name : artistDetails.name}\r\n        </p>\r\n        {songDetails && (\r\n          <Link\r\n            className=\"hover\"\r\n            to={`/artist-details/${songDetails.artists?.at(0).id}`}\r\n          >\r\n            <small className='truncate d-block fw-light fs-6'>\r\n              {songDetails.artists[0].name}\r\n            </small>\r\n          </Link>\r\n        )}\r\n        <small\r\n          id=\"artistBio\"\r\n          className={`fw-light fs-6 ${songDetails ? \"\" : \"mt-4\"}`}\r\n        >\r\n          {songDetails ? songDetails.album.genres?.at(0) : \"\"}\r\n        </small>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailsHeader;\r\n","const AlbumCard = ({ name, image, releaseDate }) => {\r\n  return (\r\n    <li\r\n      className=\"list-group-item d-flex align-items-center text-white rounded-2 mb-2\"\r\n      style={{ backgroundColor: \"#4c426e\", border: \"none\"}}\r\n    >\r\n      <img\r\n        loading=\"lazy\"\r\n        src={image}\r\n        alt=\"song_img\"\r\n        className=\"rounded mx-2\"\r\n        width=\"60px\"\r\n        onLoad={(e) => {e.target.style.visibility = 'visible';}}\r\n      />\r\n      <div className=\"w-50\">\r\n        <p className={`mb-0 fw-semibold truncate`}>{name}</p>\r\n        <small className=\"truncate d-block\">{releaseDate}</small>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default AlbumCard;\r\n","import { useRef, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport AlbumCard from \"../components/AlbumCard\";\r\nimport DetailsHeader from \"../components/DetailsHeader\";\r\nimport Loader from \"../components/Loader\";\r\nimport Error from \"../components/Error\";\r\nimport {\r\n  useGetArtistAlbumsQuery,\r\n  useGetArtistDetailsQuery,\r\n} from \"../services/spotify\";\r\nimport { useGetArtistBioQuery } from \"../services/spotifyRapidApi\";\r\n\r\n\r\nconst ArtistDetails = () => {\r\n  const params = useParams();\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    ref.current?.scrollIntoView({behavior: 'smooth'});\r\n  }, [ref]);\r\n\r\n  const {\r\n    data: artistDetails,\r\n    isFetching: isFetchingDetails,\r\n    error: detailsError,\r\n  } = useGetArtistDetailsQuery(params.artistId);\r\n\r\n  const {\r\n    data: artistAlbums,\r\n    isFetching,\r\n    error,\r\n  } = useGetArtistAlbumsQuery(params.artistId);\r\n\r\n  const {data: bioData, isFetching: isFetchingBio, error: bioError} = useGetArtistBioQuery(params.artistId);\r\n\r\n  return (\r\n    <section\r\n      className=\"text-white col-12 col-lg-6 col-xl-7 mt-5 mt-lg-4\"\r\n      style={{ marginTop: \"5rem\" }}\r\n      ref={ref}\r\n    >\r\n      {(isFetching || isFetchingDetails || isFetchingBio) && <Loader />}\r\n      {(error || detailsError || bioError) && <Error />}\r\n      {artistAlbums && artistDetails && bioData && (\r\n        <>\r\n          <DetailsHeader artistDetails={artistDetails} bio={bioData?.data.artist.profile.biography.text}/>\r\n          <div>\r\n            <h4 className=\"mb-4 mt-5\">Related Songs</h4>\r\n            <ol className=\"list-group list-group-numbered\">\r\n              {artistAlbums?.items.map((album) => (\r\n                <AlbumCard\r\n                  image={album.images[0].url}\r\n                  name={album.name}\r\n                  key={album.id}\r\n                  releaseDate={album.release_date}\r\n                />\r\n              ))}\r\n            </ol>\r\n          </div>\r\n        </>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ArtistDetails;\r\n"],"names":["artistDetails","songDetails","bio","useEffect","document","getElementById","innerHTML","className","classes","style","maxWidth","src","album","images","url","alt","onLoad","e","target","visibility","name","to","artists","at","id","genres","image","releaseDate","backgroundColor","border","loading","width","params","useParams","ref","useRef","current","scrollIntoView","behavior","useGetArtistDetailsQuery","artistId","data","isFetchingDetails","isFetching","detailsError","error","useGetArtistAlbumsQuery","artistAlbums","useGetArtistBioQuery","bioData","isFetchingBio","bioError","marginTop","Loader","Error","DetailsHeader","artist","profile","biography","text","items","map","release_date"],"sourceRoot":""}